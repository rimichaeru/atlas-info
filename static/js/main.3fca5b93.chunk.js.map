{"version":3,"sources":["components/NavBar/index.js","components/NavBar/NavBar.jsx","components/SearchBar/index.js","components/SearchBar/SearchBar.jsx","components/BarChart/index.js","components/BarChart/BarChart.jsx","components/BriefCard/index.js","components/BriefCard/BriefCard.jsx","containers/Home/Home.jsx","containers/Home/index.js","containers/UK/UK.jsx","containers/UK/index.js","containers/US/US.jsx","containers/US/index.js","containers/India/India.jsx","containers/India/index.js","containers/China/China.jsx","containers/China/index.js","containers/Other/index.js","containers/Other/Other.jsx","containers/Routes/index.js","containers/Routes/Routes.jsx","App.jsx","reportWebVitals.js","index.js","App.module.scss","components/NavBar/NavBar.module.scss","components/BriefCard/BriefCard.module.scss"],"names":["NavBar","to","className","styles","link","SearchBar","props","type","placeholder","onInput","e","updateSearch","target","value","BarChart","settings","labels","data","map","category","name","datasets","label","Number","score_out_of_10","toFixed","backgroundColor","color","console","log","height","options","title","display","text","fontSize","legend","position","BriefCard","formattedPop","String","pop","length","toString","replace","summaryArray","summary","split","formattedSummary","i","container","src","img","alt","fullName","information","location","continent","stats","score","lat","lon","dangerouslySetInnerHTML","__html","categoriesHead","categories","slice","Home","useState","placeView","setPlaceView","cardList","setCardList","searchPlaceAPI","searchText","formattedID","word","charAt","toUpperCase","join","fetch","then","response","json","placeData","place","key","error","useEffect","choice","Math","floor","random","app","line","cardContainer","footer","href","UK","US","India","China","Other","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3fca5b93.chunk.js","sourcesContent":["import NavBar from \"./NavBar\";\n\nexport default NavBar;\n","import React from \"react\";\nimport styles from \"./NavBar.module.scss\";\nimport {Link} from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/atlas-info\" className={styles.link}>Home</Link>\n          </li>\n          <li>\n            <Link to=\"/atlas-info/uk\" className={styles.link}>UK</Link>\n          </li>\n          <li>\n            <Link to=\"/atlas-info/india\" className={styles.link}>India</Link>\n          </li>\n          <li>\n            <Link to=\"/atlas-info/china\" className={styles.link}>China</Link>\n          </li>\n          <li>\n            <Link to=\"/atlas-info/us\" className={styles.link}>US</Link>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n\nexport default NavBar;\n","import SearchBar from \"./SearchBar\";\n\nexport default SearchBar;\n","import React from \"react\";\nimport styles from \"./SearchBar.module.scss\";\n\nconst SearchBar = (props) => {\n  return (\n    <>\n      <input type=\"text\" placeholder=\"Search City, Region, or Country \" onInput={(e) => props.updateSearch(e.target.value)}/>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import BarChart from \"./BarChart\";\n\nexport default BarChart;\n","import { Chart } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport React from \"react\";\nimport styles from \"./BarChart.module.scss\";\n\nconst BarChart = (props) => {\n\n  const settings = {\n    labels: props.data.map((category) => {\n      return category.name;\n    }),\n    datasets: [\n      {\n        label: \"Score Out of 10\",\n        data: props.data.map((category) => {\n          return Number(category.score_out_of_10.toFixed(2));\n        }),\n        backgroundColor: props.data.map((category) => {\n          return category.color;\n        }),\n      },\n    ],\n  };\n\n  console.log(props.data);\n\n  return (\n    <>\n      <Bar\n        height={180}\n        data={settings}\n        options={{\n          title: {\n            display: true,\n            text: \"Categories\",\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: \"right\",\n          },\n        }}\n      />\n    </>\n  );\n};\n\nexport default BarChart;\n","import BriefCard from \"./BriefCard\";\n\nexport default BriefCard;\n","import React from \"react\";\nimport styles from \"./BriefCard.module.scss\";\nimport BarChart from \"../BarChart\";\n\nconst BriefCard = (props) => {\n\n  // const categoryList = () => {\n  //   const catList = props.categories.map((category) => {\n  //     return <p style={{\"color\":category.color}} className={styles.catStyle}>{category.name}, {category.score_out_of_10.toFixed(2)}</p>\n  //   })\n\n  //   return <div className={styles.catContainer}>{catList}</div>\n  // }\n\n  // format population from number into string with commas for readability\n  let formattedPop = \"\";\n  if (String(props.pop).length > 3) {\n    formattedPop = props.pop.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  } else {\n    formattedPop = String(props.pop);\n  }\n\n\n  // remove unnecessary info from the summary from the end of the summary\n  const summaryArray = props.summary.split(\"\\n\\n\\n\");\n  let formattedSummary = \"\";\n  if (summaryArray.length > 1) {\n    for (let i = 0; i < summaryArray.length-1; i++) {\n      formattedSummary += summaryArray[i];\n    }\n  } else {\n    formattedSummary = props.summary;\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src={props.img} alt={props.fullName} />\n\n      <div className={styles.information}>\n        <div className={styles.location}>\n          <h3>{props.fullName}</h3>\n          <p>{props.continent}</p>\n        </div>\n\n        <div className={styles.stats}>\n          <p><b>Population</b> {formattedPop}</p>\n          <p><b>City Score</b> {props.score.toFixed(1)}</p>\n          <p><b>Latitude</b> {props.lat.toFixed(3)}</p>\n          <p><b>Longitude</b> {props.lon.toFixed(3)}</p>\n        </div>\n\n        <p dangerouslySetInnerHTML={{__html: `${formattedSummary}`}}></p>\n        \n        <div className={styles.categoriesHead}>\n          <h2>Categories <span>Higher is better!</span></h2>\n        </div>\n        <BarChart data={props.categories.slice(0, 9)} title=\"Categories\" />\n        <BarChart data={props.categories.slice(9)} title=\"Categories\" />\n\n        {/* <div className={styles.categories}>\n          {categoryList()}\n        </div> */}\n\n      </div>\n\n    </div>\n  );\n};\n\nexport default BriefCard;\n","import React, {useState, useEffect}  from \"react\";\nimport styles from \"../../App.module.scss\";\nimport SearchBar from \"../../components/SearchBar\";\nimport BriefCard from \"../../components/BriefCard\";\n\nfunction Home() {\n\n  const [placeID, setPlaceID] = useState(\"\");\n  const [placeView, setPlaceView] = useState(\"\");\n  const [cardList, setCardList] = useState([])\n  // const [fullInfo, setFullInfo] = useState(\"\");\n\n  const searchPlaceAPI = (searchText) => {\n\n    const formattedID = searchText.split(\" \").map((word) => {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(\" \");\n\n    setPlaceView(formattedID);\n\n    \n    if (searchText.length < 2) {\n      return;\n    }\n\n    fetch(`https://api.teleport.org/api/cities/?search=${searchText}&embed=city:search-results/city:item/city:urban_area/ua:scores/ua:item&embed=city:search-results/city:item/city:urban_area/ua:images`).then((response) => {\n      return response.json();\n    }).then((placeData) => {\n\n      setCardList(placeData[\"_embedded\"][\"city:search-results\"].map((place) => {\n        try {\n          const key = place[\"_embedded\"][\"city:item\"][\"geoname_id\"] ? place[\"_embedded\"][\"city:item\"][\"geoname_id\"] : \"N/A\";\n          const fullName = place[\"_embedded\"][\"city:item\"][\"full_name\"] ? place[\"_embedded\"][\"city:item\"][\"full_name\"] : \"N/A\";\n          const lat = place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"latitude\"] ? place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"latitude\"] : \"N/A\";\n          const lon = place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"longitude\"] ? place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"longitude\"] : \"N/A\";\n          const pop = place[\"_embedded\"][\"city:item\"][\"population\"] ? place[\"_embedded\"][\"city:item\"][\"population\"] : \"N/A\";\n          const continent = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"continent\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"continent\"] : \"N/A\";\n          const img = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:images\"][\"photos\"][0][\"image\"][\"mobile\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:images\"][\"photos\"][0][\"image\"][\"mobile\"] : \"N/A\";\n          const summary = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"summary\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"summary\"] : \"N/A\";\n          const score = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"teleport_city_score\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"teleport_city_score\"] : \"N/A\";\n          const categories = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"categories\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"categories\"] : \"N/A\";\n  \n          return <BriefCard key={key} fullName={fullName} lat={lat} lon={lon} pop={pop} continent={continent} img={img} summary={summary} score={score} categories={categories} />\n\n\n        } catch (error) {\n          \n        }\n\n      }))\n\n    })\n\n  }\n\n\n  useEffect(() => {\n    \n    const choice = Math.floor((Math.random(1) * 10));\n\n    if (choice < 3) {\n      searchPlaceAPI(\"Switzerland\");\n    } else if (choice < 5) {\n      searchPlaceAPI(\"Brazil\");\n    } else if (choice < 8) {\n      searchPlaceAPI(\"Germany\");\n    } else {\n      searchPlaceAPI(\"Denmark\");\n    }\n\n  }, [])\n\n\n  useEffect(() => {\n    if (cardList.length === 0) {\n      setCardList(\n        <h1>Maybe on a different planet!</h1>\n      )\n    }\n  }, [cardList])\n\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.line}></div>\n      <header>\n        <h3>You've searched for <span className={styles.place}>{placeView}</span></h3>\n        <SearchBar updateSearch={searchPlaceAPI}/>\n      </header>\n      <div className={styles.line}></div>\n      <div className={styles.cardContainer}>\n        {cardList}\n      </div>\n      <div className={styles.footer}>\n        <p>Information provided by the <a href=\"https://developers.teleport.org/\">Teleport API</a></p>\n        <p>Created By Lee-Michael D'Souza</p>\n      </div>\n    </div>\n  );\n}\nexport default Home;\n","import Home from \"./Home\";\n\nexport default Home;\n","import React, {useState, useEffect}  from \"react\";\nimport styles from \"../../App.module.scss\";\nimport SearchBar from \"../../components/SearchBar\";\nimport BriefCard from \"../../components/BriefCard\";\n\nfunction UK() {\n\n  const [placeID, setPlaceID] = useState(\"\");\n  const [placeView, setPlaceView] = useState(\"\");\n  const [cardList, setCardList] = useState([])\n  // const [fullInfo, setFullInfo] = useState(\"\");\n\n  const searchPlaceAPI = (searchText) => {\n\n    const formattedID = searchText.split(\" \").map((word) => {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(\" \");\n\n    setPlaceView(formattedID);\n\n    \n    if (searchText.length < 2) {\n      return;\n    }\n\n    fetch(`https://api.teleport.org/api/cities/?search=${searchText}&embed=city:search-results/city:item/city:urban_area/ua:scores/ua:item&embed=city:search-results/city:item/city:urban_area/ua:images`).then((response) => {\n      return response.json();\n    }).then((placeData) => {\n\n      setCardList(placeData[\"_embedded\"][\"city:search-results\"].map((place) => {\n        try {\n          const key = place[\"_embedded\"][\"city:item\"][\"geoname_id\"] ? place[\"_embedded\"][\"city:item\"][\"geoname_id\"] : \"N/A\";\n          const fullName = place[\"_embedded\"][\"city:item\"][\"full_name\"] ? place[\"_embedded\"][\"city:item\"][\"full_name\"] : \"N/A\";\n          const lat = place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"latitude\"] ? place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"latitude\"] : \"N/A\";\n          const lon = place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"longitude\"] ? place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"longitude\"] : \"N/A\";\n          const pop = place[\"_embedded\"][\"city:item\"][\"population\"] ? place[\"_embedded\"][\"city:item\"][\"population\"] : \"N/A\";\n          const continent = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"continent\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"continent\"] : \"N/A\";\n          const img = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:images\"][\"photos\"][0][\"image\"][\"mobile\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:images\"][\"photos\"][0][\"image\"][\"mobile\"] : \"N/A\";\n          const summary = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"summary\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"summary\"] : \"N/A\";\n          const score = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"teleport_city_score\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"teleport_city_score\"] : \"N/A\";\n          const categories = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"categories\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"categories\"] : \"N/A\";\n  \n          return <BriefCard key={key} fullName={fullName} lat={lat} lon={lon} pop={pop} continent={continent} img={img} summary={summary} score={score} categories={categories} />\n\n        } catch (error) {\n          \n        }\n\n      }))\n\n    })\n\n  }\n\n\n  useEffect(() => {\n    searchPlaceAPI(\"United Kingdom\");\n  }, [])\n\n  useEffect(() => {\n    if (cardList.length === 0) {\n      setCardList(\n        <h1>Maybe on a different planet!</h1>\n      )\n    }\n  }, [cardList])\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.line}></div>\n      <header>\n        <h3>You've searched for <span className={styles.place}>{placeView}</span></h3>\n        <SearchBar updateSearch={searchPlaceAPI}/>\n      </header>\n      <div className={styles.line}></div>\n      <div className={styles.cardContainer}>\n        {cardList}\n      </div>\n      <div className={styles.footer}>\n        <p>Information provided by the <a href=\"https://developers.teleport.org/\">Teleport API</a></p>\n        <p>Created By Lee-Michael D'Souza</p>\n      </div>\n    </div>\n  );\n}\nexport default UK;\n","import UK from \"./UK\";\n\nexport default UK;\n","import React, {useState, useEffect}  from \"react\";\nimport styles from \"../../App.module.scss\";\nimport SearchBar from \"../../components/SearchBar\";\nimport BriefCard from \"../../components/BriefCard\";\n\nfunction US() {\n\n  const [placeID, setPlaceID] = useState(\"\");\n  const [placeView, setPlaceView] = useState(\"\");\n  const [cardList, setCardList] = useState([])\n  // const [fullInfo, setFullInfo] = useState(\"\");\n\n  const searchPlaceAPI = (searchText) => {\n\n    const formattedID = searchText.split(\" \").map((word) => {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(\" \");\n\n    setPlaceView(formattedID);\n\n    \n    if (searchText.length < 2) {\n      return;\n    }\n\n    fetch(`https://api.teleport.org/api/cities/?search=${searchText}&embed=city:search-results/city:item/city:urban_area/ua:scores/ua:item&embed=city:search-results/city:item/city:urban_area/ua:images`).then((response) => {\n      return response.json();\n    }).then((placeData) => {\n\n      setCardList(placeData[\"_embedded\"][\"city:search-results\"].map((place) => {\n        try {\n          const key = place[\"_embedded\"][\"city:item\"][\"geoname_id\"] ? place[\"_embedded\"][\"city:item\"][\"geoname_id\"] : \"N/A\";\n          const fullName = place[\"_embedded\"][\"city:item\"][\"full_name\"] ? place[\"_embedded\"][\"city:item\"][\"full_name\"] : \"N/A\";\n          const lat = place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"latitude\"] ? place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"latitude\"] : \"N/A\";\n          const lon = place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"longitude\"] ? place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"longitude\"] : \"N/A\";\n          const pop = place[\"_embedded\"][\"city:item\"][\"population\"] ? place[\"_embedded\"][\"city:item\"][\"population\"] : \"N/A\";\n          const continent = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"continent\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"continent\"] : \"N/A\";\n          const img = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:images\"][\"photos\"][0][\"image\"][\"mobile\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:images\"][\"photos\"][0][\"image\"][\"mobile\"] : \"N/A\";\n          const summary = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"summary\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"summary\"] : \"N/A\";\n          const score = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"teleport_city_score\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"teleport_city_score\"] : \"N/A\";\n          const categories = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"categories\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"categories\"] : \"N/A\";\n  \n          return <BriefCard key={key} fullName={fullName} lat={lat} lon={lon} pop={pop} continent={continent} img={img} summary={summary} score={score} categories={categories} />\n\n        } catch (error) {\n          \n        }\n\n      }))\n\n    })\n\n  }\n\n\n  useEffect(() => {\n    searchPlaceAPI(\"America\");\n  }, [])\n\n  useEffect(() => {\n    if (cardList.length === 0) {\n      setCardList(\n        <h1>Maybe on a different planet!</h1>\n      )\n    }\n  }, [cardList])\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.line}></div>\n      <header>\n        <h3>You've searched for <span className={styles.place}>{placeView}</span></h3>\n        <SearchBar updateSearch={searchPlaceAPI}/>\n      </header>\n      <div className={styles.line}></div>\n      <div className={styles.cardContainer}>\n        {cardList}\n      </div>\n      <div className={styles.footer}>\n        <p>Information provided by the <a href=\"https://developers.teleport.org/\">Teleport API</a></p>\n        <p>Created By Lee-Michael D'Souza</p>\n      </div>\n    </div>\n  );\n}\nexport default US;\n","import US from \"./US\";\n\nexport default US;\n","import React, {useState, useEffect}  from \"react\";\nimport styles from \"../../App.module.scss\";\nimport SearchBar from \"../../components/SearchBar\";\nimport BriefCard from \"../../components/BriefCard\";\n\nfunction India() {\n\n  const [placeID, setPlaceID] = useState(\"\");\n  const [placeView, setPlaceView] = useState(\"\");\n  const [cardList, setCardList] = useState([])\n  // const [fullInfo, setFullInfo] = useState(\"\");\n\n  const searchPlaceAPI = (searchText) => {\n\n    const formattedID = searchText.split(\" \").map((word) => {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(\" \");\n\n    setPlaceView(formattedID);\n\n    \n    if (searchText.length < 2) {\n      return;\n    }\n\n    fetch(`https://api.teleport.org/api/cities/?search=${searchText}&embed=city:search-results/city:item/city:urban_area/ua:scores/ua:item&embed=city:search-results/city:item/city:urban_area/ua:images`).then((response) => {\n      return response.json();\n    }).then((placeData) => {\n\n      setCardList(placeData[\"_embedded\"][\"city:search-results\"].map((place) => {\n        try {\n          const key = place[\"_embedded\"][\"city:item\"][\"geoname_id\"] ? place[\"_embedded\"][\"city:item\"][\"geoname_id\"] : \"N/A\";\n          const fullName = place[\"_embedded\"][\"city:item\"][\"full_name\"] ? place[\"_embedded\"][\"city:item\"][\"full_name\"] : \"N/A\";\n          const lat = place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"latitude\"] ? place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"latitude\"] : \"N/A\";\n          const lon = place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"longitude\"] ? place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"longitude\"] : \"N/A\";\n          const pop = place[\"_embedded\"][\"city:item\"][\"population\"] ? place[\"_embedded\"][\"city:item\"][\"population\"] : \"N/A\";\n          const continent = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"continent\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"continent\"] : \"N/A\";\n          const img = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:images\"][\"photos\"][0][\"image\"][\"mobile\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:images\"][\"photos\"][0][\"image\"][\"mobile\"] : \"N/A\";\n          const summary = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"summary\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"summary\"] : \"N/A\";\n          const score = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"teleport_city_score\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"teleport_city_score\"] : \"N/A\";\n          const categories = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"categories\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"categories\"] : \"N/A\";\n  \n          return <BriefCard key={key} fullName={fullName} lat={lat} lon={lon} pop={pop} continent={continent} img={img} summary={summary} score={score} categories={categories} />\n\n        } catch (error) {\n          \n        }\n\n      }))\n\n    })\n\n  }\n\n\n  useEffect(() => {\n    searchPlaceAPI(\"India\");\n  }, [])\n\n  useEffect(() => {\n    if (cardList.length === 0) {\n      setCardList(\n        <h1>Maybe on a different planet!</h1>\n      )\n    }\n  }, [cardList])\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.line}></div>\n      <header>\n        <h3>You've searched for <span className={styles.place}>{placeView}</span></h3>\n        <SearchBar updateSearch={searchPlaceAPI}/>\n      </header>\n      <div className={styles.line}></div>\n      <div className={styles.cardContainer}>\n        {cardList}\n      </div>\n      <div className={styles.footer}>\n        <p>Information provided by the <a href=\"https://developers.teleport.org/\">Teleport API</a></p>\n        <p>Created By Lee-Michael D'Souza</p>\n      </div>\n    </div>\n  );\n}\nexport default India;\n","import India from \"./India\";\n\nexport default India;\n","import React, {useState, useEffect}  from \"react\";\nimport styles from \"../../App.module.scss\";\nimport SearchBar from \"../../components/SearchBar\";\nimport BriefCard from \"../../components/BriefCard\";\n\nfunction China() {\n\n  const [placeID, setPlaceID] = useState(\"\");\n  const [placeView, setPlaceView] = useState(\"\");\n  const [cardList, setCardList] = useState([])\n  // const [fullInfo, setFullInfo] = useState(\"\");\n\n  const searchPlaceAPI = (searchText) => {\n\n    const formattedID = searchText.split(\" \").map((word) => {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(\" \");\n\n    setPlaceView(formattedID);\n\n    \n    if (searchText.length < 2) {\n      return;\n    }\n\n    fetch(`https://api.teleport.org/api/cities/?search=${searchText}&embed=city:search-results/city:item/city:urban_area/ua:scores/ua:item&embed=city:search-results/city:item/city:urban_area/ua:images`).then((response) => {\n      return response.json();\n    }).then((placeData) => {\n\n      setCardList(placeData[\"_embedded\"][\"city:search-results\"].map((place) => {\n        try {\n          const key = place[\"_embedded\"][\"city:item\"][\"geoname_id\"] ? place[\"_embedded\"][\"city:item\"][\"geoname_id\"] : \"N/A\";\n          const fullName = place[\"_embedded\"][\"city:item\"][\"full_name\"] ? place[\"_embedded\"][\"city:item\"][\"full_name\"] : \"N/A\";\n          const lat = place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"latitude\"] ? place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"latitude\"] : \"N/A\";\n          const lon = place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"longitude\"] ? place[\"_embedded\"][\"city:item\"][\"location\"][\"latlon\"][\"longitude\"] : \"N/A\";\n          const pop = place[\"_embedded\"][\"city:item\"][\"population\"] ? place[\"_embedded\"][\"city:item\"][\"population\"] : \"N/A\";\n          const continent = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"continent\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"continent\"] : \"N/A\";\n          const img = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:images\"][\"photos\"][0][\"image\"][\"mobile\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:images\"][\"photos\"][0][\"image\"][\"mobile\"] : \"N/A\";\n          const summary = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"summary\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"summary\"] : \"N/A\";\n          const score = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"teleport_city_score\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"teleport_city_score\"] : \"N/A\";\n          const categories = place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"categories\"] ? place[\"_embedded\"][\"city:item\"][\"_embedded\"][\"city:urban_area\"][\"_embedded\"][\"ua:scores\"][\"categories\"] : \"N/A\";\n  \n          return <BriefCard key={key} fullName={fullName} lat={lat} lon={lon} pop={pop} continent={continent} img={img} summary={summary} score={score} categories={categories} />\n\n        } catch (error) {\n          \n        }\n\n      }))\n\n    })\n\n  }\n\n\n  useEffect(() => {\n    searchPlaceAPI(\"China\");\n  }, [])\n\n  useEffect(() => {\n    if (cardList.length === 0) {\n      setCardList(\n        <h1>Maybe on a different planet!</h1>\n      )\n    }\n  }, [cardList])\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.line}></div>\n      <header>\n        <h3>You've searched for <span className={styles.place}>{placeView}</span></h3>\n        <SearchBar updateSearch={searchPlaceAPI}/>\n      </header>\n      <div className={styles.line}></div>\n      <div className={styles.cardContainer}>\n        {cardList}\n      </div>\n      <div className={styles.footer}>\n        <p>Information provided by the <a href=\"https://developers.teleport.org/\">Teleport API</a></p>\n        <p>Created By Lee-Michael D'Souza</p>\n      </div>\n    </div>\n  );\n}\nexport default China;\n","import China from \"./China\";\n\nexport default China;\n","import Other from \"./Other\";\n\nexport default Other;\n","import React from \"react\";\nimport styles from \"./Other.module.scss\";\n\nconst Other = () => {\n  return (\n    <>\n      <h1>Where are we?</h1>\n    </>\n  );\n};\n\nexport default Other;\n","import Routes from \"./Routes\";\n\nexport default Routes;\n","import React from \"react\";\nimport styles from \"./Routes.module.scss\";\nimport Home from \"../Home\";\nimport UK from \"../UK\";\nimport US from \"../US\";\nimport India from \"../India\";\nimport China from \"../China\";\nimport Other from \"../Other\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/atlas-info\"><Home /></Route>\n      <Route path=\"/atlas-info/uk\"><UK /></Route>\n      <Route path=\"/atlas-info/india\"><India /></Route>\n      <Route path=\"/atlas-info/us\"><US /></Route>\n      <Route path=\"/atlas-info/china\"><China /></Route>\n      <Route path=\"/*\"><Other /></Route>\n    </Switch>\n  );\n};\n\nexport default Routes;","import styles from './App.module.scss';\nimport NavBar from \"./components/NavBar\";\nimport Routes from \"./containers/Routes\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <NavBar />\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2Wpyi\",\"place\":\"App_place__Yay9J\",\"line\":\"App_line__2GDCd\",\"cardContainer\":\"App_cardContainer__2Fxov\",\"footer\":\"App_footer__31ubH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"NavBar_link__1Gxpg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BriefCard_container__3x2nK\",\"information\":\"BriefCard_information__3R4Z0\",\"location\":\"BriefCard_location__2ZomY\",\"stats\":\"BriefCard_stats__1AlwH\",\"catContainer\":\"BriefCard_catContainer__3Y6jj\",\"catStyle\":\"BriefCard_catStyle__4jAXa\",\"categoriesHead\":\"BriefCard_categoriesHead__3z56a\"};"],"sourceRoot":""}